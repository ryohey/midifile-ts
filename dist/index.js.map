{"version":3,"file":"index.js","sources":["../src/constants/MIDIChannelEvents.ts","../src/constants/MIDIControlEventNames.ts","../src/constants/MIDIControlEvents.ts","../src/constants/MIDIMetaEventNames.ts","../src/constants/MIDIMetaEvents.ts","../src/deserialize.ts","../src/stream.ts","../src/read.ts","../src/toCharCodes.ts","../src/vlq.ts","../src/serialize.ts","../src/buffer.ts","../src/write.ts"],"sourcesContent":["export const MIDIChannelEvents = {\r\n  noteOff: 0x08,\r\n  noteOn: 0x09,\r\n  noteAftertouch: 0x0a,\r\n  controller: 0x0b,\r\n  programChange: 0x0c,\r\n  channelAftertouch: 0x0d,\r\n  pitchBend: 0x0e,\r\n} as const\r\n","export const MIDIControlEventNames = [\r\n  \"Bank Select\",\r\n  \"Modulation\",\r\n  \"Breath Controller\",\r\n  \"Foot Pedal\",\r\n  \"Portamento Time\",\r\n  \"Data Entry\",\r\n  \"Volume\",\r\n  \"Balance\",\r\n  \"Pan\",\r\n  \"Expression\",\r\n  \"Effect Control 1\",\r\n  \"Effect Control 2\",\r\n  \"Undefined\",\r\n  \"Undefined\",\r\n  \"General Purpose Slider 1\",\r\n  \"General Purpose Slider 2\",\r\n  \"General Purpose Slider 3\",\r\n  \"Knob 2 General Purpose Slider 4\",\r\n  \"Knob 3\",\r\n  \"Knob 4\",\r\n  \"Bank Select\",\r\n  \"Modulation Wheel\",\r\n  \"Breath controller\",\r\n  \"Foot Pedal\",\r\n  \"Portamento Time\",\r\n  \"Data Entry\",\r\n  \"Volume\",\r\n  \"Balance\",\r\n  \"Pan position\",\r\n  \"Expression\",\r\n  \"Effect Control 1\",\r\n  \"Effect Control 2\",\r\n  \"Hold Pedal\",\r\n  \"Portamento\",\r\n  \"Sustenuto Pedal\",\r\n  \"Soft Pedal\",\r\n  \"Legato Pedal\",\r\n  \"Hold 2 Pedal\",\r\n  \"Sound Variation\",\r\n  \"Resonance\",\r\n  \"Sound Release Time\",\r\n  \"Sound Attack Time\",\r\n  \"Frequency Cutoff\",\r\n  \"Sound Control 6\",\r\n  \"Sound Control 7\",\r\n  \"Sound Control 8\",\r\n  \"Sound Control 9\",\r\n  \"Sound Control 10\",\r\n  \"Decay\",\r\n  \"High Pass Filter Frequency\",\r\n  \"General Purpose Button 3\",\r\n  \"General Purpose Button 4\",\r\n  \"Reverb Level\",\r\n  \"Tremolo Level\",\r\n  \"Chorus Level\",\r\n  \"Detune\",\r\n  \"Phaser Level\",\r\n  \"Data Button Increment\",\r\n  \"Data Button Decrement\",\r\n  \"NRPN (LSB)\",\r\n  \"NRPN (MSB)\",\r\n  \"RPN (LSB)\",\r\n  \"RPN (MSB)\",\r\n  \"All Sound Off\",\r\n  \"All Controllers Off\",\r\n  \"Local Keyboard\",\r\n  \"All Notes Off\",\r\n  \"Omni Mode Off\",\r\n  \"Omni Mode On\",\r\n  \"Mono Operation\",\r\n  \"Poly Operation\",\r\n] as const\r\n","export const MIDIControlEvents = {\r\n  MSB_BANK: 0x00,\r\n  MSB_MODWHEEL: 0x01,\r\n  MSB_BREATH: 0x02,\r\n  MSB_FOOT: 0x04,\r\n  MSB_PORTAMENTO_TIME: 0x05,\r\n  MSB_DATA_ENTRY: 0x06,\r\n  MSB_MAIN_VOLUME: 0x07,\r\n  MSB_BALANCE: 0x08,\r\n  MSB_PAN: 0x0a,\r\n  MSB_EXPRESSION: 0x0b,\r\n  MSB_EFFECT1: 0x0c,\r\n  MSB_EFFECT2: 0x0d,\r\n  MSB_GENERAL_PURPOSE1: 0x10,\r\n  MSB_GENERAL_PURPOSE2: 0x11,\r\n  MSB_GENERAL_PURPOSE3: 0x12,\r\n  MSB_GENERAL_PURPOSE4: 0x13,\r\n  LSB_BANK: 0x20,\r\n  LSB_MODWHEEL: 0x21,\r\n  LSB_BREATH: 0x22,\r\n  LSB_FOOT: 0x24,\r\n  LSB_PORTAMENTO_TIME: 0x25,\r\n  LSB_DATA_ENTRY: 0x26,\r\n  LSB_MAIN_VOLUME: 0x27,\r\n  LSB_BALANCE: 0x28,\r\n  LSB_PAN: 0x2a,\r\n  LSB_EXPRESSION: 0x2b,\r\n  LSB_EFFECT1: 0x2c,\r\n  LSB_EFFECT2: 0x2d,\r\n  LSB_GENERAL_PURPOSE1: 0x30,\r\n  LSB_GENERAL_PURPOSE2: 0x31,\r\n  LSB_GENERAL_PURPOSE3: 0x32,\r\n  LSB_GENERAL_PURPOSE4: 0x33,\r\n  SUSTAIN: 0x40,\r\n  PORTAMENTO: 0x41,\r\n  SOSTENUTO: 0x42,\r\n  SUSTENUTO: 0x42,\r\n  SOFT_PEDAL: 0x43,\r\n  LEGATO_FOOTSWITCH: 0x44,\r\n  HOLD2: 0x45,\r\n  SC1_SOUND_VARIATION: 0x46,\r\n  SC2_TIMBRE: 0x47,\r\n  SC3_RELEASE_TIME: 0x48,\r\n  SC4_ATTACK_TIME: 0x49,\r\n  SC5_BRIGHTNESS: 0x4a,\r\n  SC6: 0x4b,\r\n  SC7: 0x4c,\r\n  SC8: 0x4d,\r\n  SC9: 0x4e,\r\n  SC10: 0x4f,\r\n  GENERAL_PURPOSE5: 0x50,\r\n  GENERAL_PURPOSE6: 0x51,\r\n  GENERAL_PURPOSE7: 0x52,\r\n  GENERAL_PURPOSE8: 0x53,\r\n  PORTAMENTO_CONTROL: 0x54,\r\n  E1_REVERB_DEPTH: 0x5b,\r\n  E2_TREMOLO_DEPTH: 0x5c,\r\n  E3_CHORUS_DEPTH: 0x5d,\r\n  E4_DETUNE_DEPTH: 0x5e,\r\n  E5_PHASER_DEPTH: 0x5f,\r\n  DATA_INCREMENT: 0x60,\r\n  DATA_DECREMENT: 0x61,\r\n  NONREG_PARM_NUM_LSB: 0x62,\r\n  NONREG_PARM_NUM_MSB: 0x63,\r\n  REGIST_PARM_NUM_LSB: 0x64,\r\n  REGIST_PARM_NUM_MSB: 0x65,\r\n  ALL_SOUNDS_OFF: 0x78,\r\n  RESET_CONTROLLERS: 0x79,\r\n  LOCAL_CONTROL_SWITCH: 0x7a,\r\n  ALL_NOTES_OFF: 0x7b,\r\n  OMNI_OFF: 0x7c,\r\n  OMNI_ON: 0x7d,\r\n  MONO1: 0x7e,\r\n  MONO2: 0x7f,\r\n} as const\r\n","export const MIDIMetaEventNames = {\r\n  0x00: \"sequenceNumber\",\r\n  0x01: \"text\",\r\n  0x02: \"copyrightNotice\",\r\n  0x03: \"trackName\",\r\n  0x04: \"instrumentName\",\r\n  0x05: \"lyrics\",\r\n  0x06: \"marker\",\r\n  0x07: \"cuePoint\",\r\n  0x20: \"midiChannelPrefix\",\r\n  0x21: \"portPrefix\",\r\n  0x2f: \"endOfTrack\",\r\n  0x51: \"setTempo\",\r\n  0x54: \"smpteOffset\",\r\n  0x58: \"timeSignature\",\r\n  0x59: \"keySignature\",\r\n  0x7f: \"sequencerSpecific\",\r\n} as const\r\n","export const MIDIMetaEvents = {\r\n  sequenceNumber: 0x00,\r\n  text: 0x01,\r\n  copyrightNotice: 0x02,\r\n  trackName: 0x03,\r\n  instrumentName: 0x04,\r\n  lyrics: 0x05,\r\n  marker: 0x06,\r\n  cuePoint: 0x07,\r\n  midiChannelPrefix: 0x20,\r\n  portPrefix: 0x21,\r\n  endOfTrack: 0x2f,\r\n  setTempo: 0x51,\r\n  smpteOffset: 0x54,\r\n  timeSignature: 0x58,\r\n  keySignature: 0x59,\r\n  sequencerSpecific: 0x7f,\r\n} as const\r\n","import { MIDIChannelEvents } from \".\"\r\nimport { MIDIMetaEvents } from \"./constants/MIDIMetaEvents\"\r\nimport {\r\n  AnyEvent,\r\n  ChannelAftertouchEvent,\r\n  ChannelPrefixEvent,\r\n  ControllerEvent,\r\n  CopyrightNoticeEvent,\r\n  CuePointEvent,\r\n  DividedSysExEvent,\r\n  EndOfTrackEvent,\r\n  InstrumentNameEvent,\r\n  KeySignatureEvent,\r\n  LyricsEvent,\r\n  MarkerEvent,\r\n  NoteAftertouchEvent,\r\n  NoteOffEvent,\r\n  NoteOnEvent,\r\n  PitchBendEvent,\r\n  PortPrefixEvent,\r\n  ProgramChangeEvent,\r\n  SequenceNumberEvent,\r\n  SequencerSpecificEvent,\r\n  SetTempoEvent,\r\n  SmpteOffsetEvent,\r\n  SysExEvent,\r\n  TextEvent,\r\n  TimeSignatureEvent,\r\n  TrackNameEvent,\r\n  UnknownChannelEvent,\r\n  UnknownMetaEvent,\r\n} from \"./event\"\r\nimport { Stream } from \"./stream\"\r\n\r\nexport function deserialize(\r\n  stream: Stream,\r\n  lastEventTypeByte: number = 0,\r\n  setLastEventTypeByte?: (eventType: number) => void\r\n): AnyEvent {\r\n  const deltaTime = stream.readVarInt()\r\n  return deserializeSingleEvent(\r\n    stream,\r\n    deltaTime,\r\n    lastEventTypeByte,\r\n    setLastEventTypeByte\r\n  )\r\n}\r\n\r\nexport function deserializeSingleEvent(\r\n  stream: Stream,\r\n  deltaTime: number = 0,\r\n  lastEventTypeByte: number = 0,\r\n  setLastEventTypeByte?: (eventType: number) => void\r\n) {\r\n  let eventTypeByte = stream.readInt8()\r\n  if ((eventTypeByte & 0xf0) === 0xf0) {\r\n    /* system / meta event */\r\n    if (eventTypeByte === 0xff) {\r\n      /* meta event */\r\n      const type = \"meta\"\r\n      const subtypeByte = stream.readInt8()\r\n      const length = stream.readVarInt()\r\n      switch (subtypeByte) {\r\n        case MIDIMetaEvents.sequenceNumber:\r\n          if (length !== 2)\r\n            throw new Error(\r\n              \"Expected length for sequenceNumber event is 2, got \" + length\r\n            )\r\n          return <SequenceNumberEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"sequenceNumber\",\r\n            number: stream.readInt16(),\r\n          }\r\n        case MIDIMetaEvents.text:\r\n          return <TextEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"text\",\r\n            text: stream.readStr(length),\r\n          }\r\n        case MIDIMetaEvents.copyrightNotice:\r\n          return <CopyrightNoticeEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"copyrightNotice\",\r\n            text: stream.readStr(length),\r\n          }\r\n        case MIDIMetaEvents.trackName:\r\n          return <TrackNameEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"trackName\",\r\n            text: stream.readStr(length),\r\n          }\r\n        case MIDIMetaEvents.instrumentName:\r\n          return <InstrumentNameEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"instrumentName\",\r\n            text: stream.readStr(length),\r\n          }\r\n        case MIDIMetaEvents.lyrics:\r\n          return <LyricsEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"lyrics\",\r\n            text: stream.readStr(length),\r\n          }\r\n        case MIDIMetaEvents.marker:\r\n          return <MarkerEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"marker\",\r\n            text: stream.readStr(length),\r\n          }\r\n        case MIDIMetaEvents.cuePoint:\r\n          return <CuePointEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"cuePoint\",\r\n            text: stream.readStr(length),\r\n          }\r\n        case MIDIMetaEvents.midiChannelPrefix:\r\n          if (length !== 1)\r\n            throw new Error(\r\n              \"Expected length for midiChannelPrefix event is 1, got \" + length\r\n            )\r\n          return <ChannelPrefixEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"midiChannelPrefix\",\r\n            value: stream.readInt8(),\r\n          }\r\n        case MIDIMetaEvents.portPrefix:\r\n          if (length !== 1)\r\n            throw new Error(\r\n              \"Expected length for midiChannelPrefix event is 1, got \" + length\r\n            )\r\n          return <PortPrefixEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"portPrefix\",\r\n            port: stream.readInt8(),\r\n          }\r\n        case MIDIMetaEvents.endOfTrack:\r\n          if (length !== 0)\r\n            throw new Error(\r\n              \"Expected length for endOfTrack event is 0, got \" + length\r\n            )\r\n          return <EndOfTrackEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"endOfTrack\",\r\n          }\r\n        case MIDIMetaEvents.setTempo:\r\n          if (length !== 3)\r\n            throw new Error(\r\n              \"Expected length for setTempo event is 3, got \" + length\r\n            )\r\n          return <SetTempoEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"setTempo\",\r\n            microsecondsPerBeat:\r\n              (stream.readInt8() << 16) +\r\n              (stream.readInt8() << 8) +\r\n              stream.readInt8(),\r\n          }\r\n        case MIDIMetaEvents.smpteOffset: {\r\n          if (length !== 5)\r\n            throw new Error(\r\n              \"Expected length for smpteOffset event is 5, got \" + length\r\n            )\r\n          const hourByte = stream.readInt8()\r\n          const table: { [key: number]: number } = {\r\n            0x00: 24,\r\n            0x20: 25,\r\n            0x40: 29,\r\n            0x60: 30,\r\n          }\r\n          return <SmpteOffsetEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"smpteOffset\",\r\n            frameRate: table[hourByte & 0x60],\r\n            hour: hourByte & 0x1f,\r\n            min: stream.readInt8(),\r\n            sec: stream.readInt8(),\r\n            frame: stream.readInt8(),\r\n            subframe: stream.readInt8(),\r\n          }\r\n        }\r\n        case MIDIMetaEvents.timeSignature:\r\n          if (length !== 4)\r\n            throw new Error(\r\n              \"Expected length for timeSignature event is 4, got \" + length\r\n            )\r\n          return <TimeSignatureEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"timeSignature\",\r\n            numerator: stream.readInt8(),\r\n            denominator: Math.pow(2, stream.readInt8()),\r\n            metronome: stream.readInt8(),\r\n            thirtyseconds: stream.readInt8(),\r\n          }\r\n        case MIDIMetaEvents.keySignature:\r\n          if (length !== 2)\r\n            throw new Error(\r\n              \"Expected length for keySignature event is 2, got \" + length\r\n            )\r\n          return <KeySignatureEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"keySignature\",\r\n            key: stream.readInt8(true),\r\n            scale: stream.readInt8(),\r\n          }\r\n        case MIDIMetaEvents.sequencerSpecific:\r\n          return <SequencerSpecificEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"sequencerSpecific\",\r\n            data: stream.read(length),\r\n          }\r\n        default:\r\n          return <UnknownMetaEvent>{\r\n            deltaTime,\r\n            type,\r\n            subtype: \"unknown\",\r\n            data: stream.read(length),\r\n          }\r\n      }\r\n    } else if (eventTypeByte === 0xf0) {\r\n      const length = stream.readVarInt()\r\n      return <SysExEvent>{\r\n        deltaTime,\r\n        type: \"sysEx\",\r\n        data: stream.read(length),\r\n      }\r\n    } else if (eventTypeByte === 0xf7) {\r\n      const length = stream.readVarInt()\r\n      return <DividedSysExEvent>{\r\n        deltaTime,\r\n        type: \"dividedSysEx\",\r\n        data: stream.read(length),\r\n      }\r\n    } else {\r\n      throw new Error(\"Unrecognised MIDI event type byte: \" + eventTypeByte)\r\n    }\r\n  } else {\r\n    /* channel event */\r\n    let param1\r\n    if ((eventTypeByte & 0x80) === 0) {\r\n      /* running status - reuse lastEventTypeByte as the event type.\r\n        eventTypeByte is actually the first parameter\r\n      */\r\n      param1 = eventTypeByte\r\n      eventTypeByte = lastEventTypeByte\r\n    } else {\r\n      param1 = stream.readInt8()\r\n      setLastEventTypeByte?.(eventTypeByte)\r\n    }\r\n    const eventType = eventTypeByte >> 4\r\n    const channel = eventTypeByte & 0x0f\r\n    const type = \"channel\"\r\n    switch (eventType) {\r\n      case MIDIChannelEvents.noteOff:\r\n        return <NoteOffEvent>{\r\n          deltaTime,\r\n          type,\r\n          channel,\r\n          subtype: \"noteOff\",\r\n          noteNumber: param1,\r\n          velocity: stream.readInt8(),\r\n        }\r\n      case MIDIChannelEvents.noteOn: {\r\n        const velocity = stream.readInt8()\r\n        return <NoteOnEvent>{\r\n          deltaTime,\r\n          type,\r\n          channel,\r\n          subtype: velocity === 0 ? \"noteOff\" : \"noteOn\",\r\n          noteNumber: param1,\r\n          velocity: velocity,\r\n        }\r\n      }\r\n      case MIDIChannelEvents.noteAftertouch:\r\n        return <NoteAftertouchEvent>{\r\n          deltaTime,\r\n          type,\r\n          channel,\r\n          subtype: \"noteAftertouch\",\r\n          noteNumber: param1,\r\n          amount: stream.readInt8(),\r\n        }\r\n      case MIDIChannelEvents.controller:\r\n        return <ControllerEvent>{\r\n          deltaTime,\r\n          type,\r\n          channel,\r\n          subtype: \"controller\",\r\n          controllerType: param1,\r\n          value: stream.readInt8(),\r\n        }\r\n      case MIDIChannelEvents.programChange:\r\n        return <ProgramChangeEvent>{\r\n          deltaTime,\r\n          type,\r\n          channel,\r\n          subtype: \"programChange\",\r\n          value: param1,\r\n        }\r\n      case MIDIChannelEvents.channelAftertouch:\r\n        return <ChannelAftertouchEvent>{\r\n          deltaTime,\r\n          type,\r\n          channel,\r\n          subtype: \"channelAftertouch\",\r\n          amount: param1,\r\n        }\r\n      case MIDIChannelEvents.pitchBend:\r\n        return <PitchBendEvent>{\r\n          deltaTime,\r\n          type,\r\n          channel,\r\n          subtype: \"pitchBend\",\r\n          value: param1 + (stream.readInt8() << 7),\r\n        }\r\n      default:\r\n        return <UnknownChannelEvent>{\r\n          deltaTime,\r\n          type,\r\n          channel,\r\n          subtype: \"unknown\",\r\n          data: stream.readInt8(),\r\n        }\r\n    }\r\n  }\r\n}\r\n","export type StreamSource =\r\n  | DataView\r\n  | number[]\r\n  | ArrayBuffer\r\n  | Uint8Array\r\n\r\n/* Wrapper for accessing strings through sequential reads */\r\nexport class Stream {\r\n  private buf: DataView\r\n  private position = 0\r\n\r\n  constructor(buf: StreamSource) {\r\n    if (buf instanceof DataView) {\r\n      this.buf = buf\r\n    } else if (buf instanceof ArrayBuffer) {\r\n      this.buf = new DataView(buf)\r\n    } else if (buf instanceof Array) {\r\n      this.buf = new DataView(new Uint8Array(buf).buffer)\r\n    } else if (buf instanceof Uint8Array) {\r\n      this.buf = new DataView(buf.buffer)\r\n    } else {\r\n      throw new Error(\"not supported type: \" + typeof buf)\r\n    }\r\n  }\r\n\r\n  readByte() {\r\n    return this.buf.getUint8(this.position++)\r\n  }\r\n\r\n  readStr(length: number): string {\r\n    return this.read(length)\r\n      .map(e => String.fromCharCode(e))\r\n      .join(\"\")\r\n  }\r\n\r\n  read(length: number): number[] {\r\n    const result: number[] = []\r\n    for (let index = 0; index < length; index++) {\r\n      result.push(this.readByte())\r\n    }\r\n    return result\r\n  }\r\n\r\n  /* read a big-endian 32-bit integer */\r\n  readInt32(): number {\r\n    const result = this.buf.getInt32(this.position, false)\r\n    this.position += 4\r\n    return result\r\n  }\r\n\r\n  /* read a big-endian 16-bit integer */\r\n  readInt16(): number {\r\n    const result = this.buf.getInt16(this.position, false)\r\n    this.position += 2\r\n    return result\r\n  }\r\n\r\n  /* read an 8-bit integer */\r\n  readInt8(signed = false): number {\r\n    if (signed) {\r\n      return this.buf.getInt8(this.position++)\r\n    } else {\r\n      return this.readByte()\r\n    }\r\n  }\r\n\r\n  eof(): boolean {\r\n    return this.position >= this.buf.byteLength\r\n  }\r\n\r\n  /* read a MIDI-style variable-length integer\r\n    (big-endian value in groups of 7 bits,\r\n    with top bit set to signify that another byte follows)\r\n  */\r\n  readVarInt(): number {\r\n    let result = 0\r\n    for (;;) {\r\n      const b = this.readInt8()\r\n      if (b & 0x80) {\r\n        result += b & 0x7f\r\n        result <<= 7\r\n      } else {\r\n        /* b is the last byte */\r\n        return result + b\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { deserialize } from \"./deserialize\"\r\nimport { AnyEvent } from \"./event\"\r\nimport { Stream, StreamSource } from \"./stream\"\r\n\r\nexport interface MidiHeader {\r\n  formatType: number\r\n  trackCount: number\r\n  ticksPerBeat: number\r\n}\r\n\r\nexport interface MidiFile {\r\n  header: MidiHeader\r\n  tracks: AnyEvent[][]\r\n}\r\n\r\n/*\r\nclass to parse the .mid file format\r\n(depends on stream.js)\r\n*/\r\nexport function read(data: StreamSource): MidiFile {\r\n  function readChunk(stream: Stream) {\r\n    const id = stream.readStr(4)\r\n    const length = stream.readInt32()\r\n    return {\r\n      id,\r\n      length,\r\n      data: stream.read(length),\r\n    }\r\n  }\r\n\r\n  const stream = new Stream(data)\r\n  const headerChunk = readChunk(stream)\r\n  if (headerChunk.id !== \"MThd\" || headerChunk.length !== 6) {\r\n    throw new Error(\"Bad .mid file - header not found\")\r\n  }\r\n  const headerStream = new Stream(headerChunk.data)\r\n  const formatType = headerStream.readInt16()\r\n  const trackCount = headerStream.readInt16()\r\n  const timeDivision = headerStream.readInt16()\r\n  let ticksPerBeat: number\r\n\r\n  if (timeDivision & 0x8000) {\r\n    throw new Error(\r\n      \"Expressing time division in SMTPE frames is not supported yet\"\r\n    )\r\n  } else {\r\n    ticksPerBeat = timeDivision\r\n  }\r\n\r\n  const header = {\r\n    formatType,\r\n    trackCount,\r\n    ticksPerBeat,\r\n  }\r\n\r\n  let lastEventTypeByte: number\r\n  function readEvent(stream: Stream): AnyEvent {\r\n    return deserialize(\r\n      stream,\r\n      lastEventTypeByte,\r\n      (byte) => (lastEventTypeByte = byte)\r\n    )\r\n  }\r\n\r\n  const tracks: AnyEvent[][] = []\r\n  for (let i = 0; i < header.trackCount; i++) {\r\n    tracks[i] = []\r\n    const trackChunk = readChunk(stream)\r\n    if (trackChunk.id !== \"MTrk\") {\r\n      throw new Error(\"Unexpected chunk - expected MTrk, got \" + trackChunk.id)\r\n    }\r\n    const trackStream = new Stream(trackChunk.data)\r\n    while (!trackStream.eof()) {\r\n      const event = readEvent(trackStream)\r\n      tracks[i].push(event)\r\n    }\r\n  }\r\n\r\n  return {\r\n    header,\r\n    tracks,\r\n  }\r\n}\r\n","export function toCharCodes(str: string): number[] {\r\n  const bytes: number[] = []\r\n  for (let i = 0; i < str.length; i++) {\r\n    bytes.push(str.charCodeAt(i))\r\n  }\r\n  return bytes\r\n}\r\n","// variable-length quantity\r\n\r\nexport function toVLQ(intNum: number): number[] {\r\n  let v = intNum\r\n  const r = [v & 0x7f]\r\n  while (true) {\r\n    v >>= 7\r\n    if (v === 0) {\r\n      break\r\n    }\r\n    r.unshift(0x80 + (v & 0x7f))\r\n  }\r\n  return r\r\n}\r\n\r\nexport const fromVLQ = (vlq: number[]): number => {\r\n  let result = 0\r\n  for (;;) {\r\n    const b = vlq.shift()\r\n    if (b === undefined) {\r\n      throw new Error(\"invalid vlq bytes\")\r\n    }\r\n    if (b & 0x80) {\r\n      result += b & 0x7f\r\n      result <<= 7\r\n    } else {\r\n      /* b is the last byte */\r\n      return result + b\r\n    }\r\n  }\r\n}\r\n","import { MIDIChannelEvents } from \"./constants/MIDIChannelEvents\"\r\nimport { MIDIMetaEvents } from \"./constants/MIDIMetaEvents\"\r\nimport { AnyEvent } from \"./event\"\r\nimport { toCharCodes } from \"./toCharCodes\"\r\nimport { toVLQ } from \"./vlq\"\r\n\r\nexport function serialize(e: AnyEvent, includeDeltaTime = true) {\r\n  const bytes: number[] = []\r\n\r\n  function add(data: number | number[]) {\r\n    if (Array.isArray(data)) {\r\n      data.forEach(add)\r\n    } else {\r\n      if (!Number.isInteger(data)) {\r\n        throw new Error(`\"${data}\" is not integer`)\r\n      }\r\n      bytes.push(data)\r\n    }\r\n  }\r\n\r\n  if (includeDeltaTime) {\r\n    add(toVLQ(e.deltaTime))\r\n  }\r\n\r\n  function addNumbers(list: number[]) {\r\n    add(list.length)\r\n    list.forEach((v) => add(v))\r\n  }\r\n\r\n  function addText(text: string) {\r\n    add(text.length)\r\n    add(toCharCodes(text))\r\n  }\r\n\r\n  switch (e.type) {\r\n    case \"meta\": {\r\n      const subtypeCode = MIDIMetaEvents[e.subtype]\r\n      if (subtypeCode === undefined) {\r\n        return []\r\n      }\r\n      add(0xff) // type\r\n      add(subtypeCode) // subtype\r\n      switch (e.subtype) {\r\n        case \"sequenceNumber\":\r\n          add(e.number)\r\n          break\r\n        case \"text\":\r\n          addText(e.text)\r\n          break\r\n        case \"copyrightNotice\":\r\n          addText(e.text)\r\n          break\r\n        case \"trackName\":\r\n          addText(e.text)\r\n          break\r\n        case \"instrumentName\":\r\n          addText(e.text)\r\n          break\r\n        case \"lyrics\":\r\n          addText(e.text)\r\n          break\r\n        case \"marker\":\r\n          addText(e.text)\r\n          break\r\n        case \"cuePoint\":\r\n          addText(e.text)\r\n          break\r\n        case \"midiChannelPrefix\":\r\n          addNumbers([e.value])\r\n          break\r\n        case \"portPrefix\":\r\n          addNumbers([e.port])\r\n          break\r\n        case \"endOfTrack\":\r\n          add(0)\r\n          break\r\n        case \"setTempo\": {\r\n          const t = e.microsecondsPerBeat\r\n          addNumbers([(t >> 16) & 0xff, (t >> 8) & 0xff, t & 0xff])\r\n          break\r\n        }\r\n        case \"smpteOffset\": {\r\n          const frameRateByte = {\r\n            24: 0x00,\r\n            25: 0x20,\r\n            29: 0x40,\r\n            30: 0x60,\r\n          }\r\n          addNumbers([\r\n            frameRateByte[e.frameRate] + (0x1f & e.hour),\r\n            e.min,\r\n            e.sec,\r\n            e.frame,\r\n            e.subframe,\r\n          ])\r\n          break\r\n        }\r\n        case \"timeSignature\": {\r\n          addNumbers([\r\n            e.numerator,\r\n            Math.log2(e.denominator),\r\n            e.metronome,\r\n            e.thirtyseconds,\r\n          ])\r\n          break\r\n        }\r\n        case \"keySignature\": {\r\n          addNumbers([e.key, e.scale])\r\n          break\r\n        }\r\n        case \"sequencerSpecific\":\r\n          addNumbers(e.data)\r\n          break\r\n        case \"unknown\":\r\n          addNumbers(e.data)\r\n          break\r\n      }\r\n      break\r\n    }\r\n    case \"sysEx\":\r\n      add(0xf0)\r\n      addNumbers(e.data)\r\n      break\r\n    case \"dividedSysEx\":\r\n      add(0xf7)\r\n      addNumbers(e.data)\r\n      break\r\n    case \"channel\": {\r\n      const subtypeCode = MIDIChannelEvents[e.subtype]\r\n      if (subtypeCode === undefined) {\r\n        return []\r\n      }\r\n      add((subtypeCode << 4) + e.channel) // subtype + channel\r\n      switch (e.subtype) {\r\n        case \"noteOff\": {\r\n          add(e.noteNumber)\r\n          add(e.velocity)\r\n          break\r\n        }\r\n        case \"noteOn\": {\r\n          add(e.noteNumber)\r\n          add(e.velocity)\r\n          break\r\n        }\r\n        case \"noteAftertouch\": {\r\n          add(e.noteNumber)\r\n          add(e.amount)\r\n          break\r\n        }\r\n        case \"controller\": {\r\n          add(e.controllerType)\r\n          add(e.value)\r\n          break\r\n        }\r\n        case \"programChange\":\r\n          add(e.value)\r\n          break\r\n        case \"channelAftertouch\":\r\n          add(e.amount)\r\n          break\r\n        case \"pitchBend\": {\r\n          add(e.value & 0x7f)\r\n          add((e.value >> 7) & 0x7f)\r\n          break\r\n        }\r\n        case \"unknown\":\r\n          add(e.data)\r\n          break\r\n      }\r\n      break\r\n    }\r\n  }\r\n\r\n  return bytes\r\n}\r\n","import { toCharCodes } from \"./toCharCodes\"\r\n\r\nexport class Buffer {\r\n  private data: number[] = []\r\n  private position: number = 0\r\n\r\n  get length() {\r\n    return this.data.length\r\n  }\r\n\r\n  writeByte(v: number) {\r\n    this.data.push(v)\r\n    this.position++\r\n  }\r\n\r\n  writeStr(str: string) {\r\n    this.writeBytes(toCharCodes(str))\r\n  }\r\n\r\n  writeInt32(v: number) {\r\n    this.writeByte((v >> 24) & 0xff)\r\n    this.writeByte((v >> 16) & 0xff)\r\n    this.writeByte((v >> 8) & 0xff)\r\n    this.writeByte(v & 0xff)\r\n  }\r\n\r\n  writeInt16(v: number) {\r\n    this.writeByte((v >> 8) & 0xff)\r\n    this.writeByte(v & 0xff)\r\n  }\r\n\r\n  writeBytes(arr: number[]) {\r\n    arr.forEach(v => this.writeByte(v))\r\n  }\r\n\r\n  writeChunk(id: string, func: (buf: Buffer) => void) {\r\n    this.writeStr(id)\r\n\r\n    const chunkBuf = new Buffer()\r\n    func(chunkBuf)\r\n\r\n    this.writeInt32(chunkBuf.length)\r\n    this.writeBytes(chunkBuf.data)\r\n  }\r\n\r\n  toBytes() {\r\n    return new Uint8Array(this.data)\r\n  }\r\n}\r\n","import { Buffer } from \"./buffer\"\r\nimport { AnyEvent } from \"./event\"\r\nimport { serialize } from \"./serialize\"\r\n\r\n//https://sites.google.com/site/yyagisite/material/smfspec#format\r\n\r\nexport function write(tracks: AnyEvent[][], ticksPerBeat = 480) {\r\n  const buf = new Buffer()\r\n\r\n  // header chunk\r\n  buf.writeChunk(\"MThd\", (it) => {\r\n    it.writeInt16(1) // formatType\r\n    it.writeInt16(tracks.length) // trackCount\r\n    it.writeInt16(ticksPerBeat) // timeDivision\r\n  })\r\n\r\n  // track chunk\r\n  for (const track of tracks) {\r\n    buf.writeChunk(\"MTrk\", (it) => {\r\n      for (const event of track) {\r\n        it.writeBytes(serialize(event))\r\n      }\r\n    })\r\n  }\r\n\r\n  return buf.toBytes()\r\n}\r\n"],"names":[],"mappings":"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"}